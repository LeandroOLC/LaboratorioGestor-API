// <auto-generated />
using System;
using LaboratorioGestor.Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LaboratorioGestor.Infra.Data.Migrations
{
    [DbContext(typeof(LatoratorioContext))]
    partial class LatoratorioContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LaboratorioGestor.Domain.Contatos.Contato", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Celular")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("CelularWhatApp")
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime>("DataDoCadastro")
                        .HasColumnType("DateTime");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(80)");

                    b.Property<string>("Fone1")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Fone2")
                        .HasColumnType("varchar(30)");

                    b.Property<int>("TipoContato")
                        .HasColumnType("int")
                        .IsFixedLength(true);

                    b.HasKey("Id");

                    b.ToTable("Contatos");
                });

            modelBuilder.Entity("LaboratorioGestor.Domain.Laboratorios.Laboratorio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataDoCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Documento")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Nome")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Proprietario")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("TPO")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TipoPessoa")
                        .IsRequired()
                        .HasColumnType("varchar(2)");

                    b.HasKey("Id");

                    b.ToTable("Laboratorios");
                });

            modelBuilder.Entity("LaboratorioGestor.Domain.Proteticos.Protetico", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CPF")
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime?>("DataDoCadastro")
                        .HasColumnType("DateTime");

                    b.Property<Guid?>("IDContato")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<string>("Nome")
                        .HasColumnType("varchar(200)");

                    b.Property<double>("PercentualDaComissao")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("IDContato");

                    b.ToTable("Proteticos");
                });

            modelBuilder.Entity("LaboratorioGestor.Domain.Proteticos.Protetico", b =>
                {
                    b.HasOne("LaboratorioGestor.Domain.Contatos.Contato", "Contatos")
                        .WithMany("Proteticos")
                        .HasForeignKey("IDContato");
                });
#pragma warning restore 612, 618
        }
    }
}
